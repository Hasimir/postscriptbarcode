NAME = postscriptbarcode

VERSION := $(shell head -n 1 ../../CHANGES)

CLASSESDIR = classes

PACKAGE = uk.co.terryburton.bwipp
PACKAGEDIR = $(CLASSESDIR)/$(subst .,/,$(PACKAGE))

SWIG_INTERFACE = ../$(NAME).i

SWIG_WRAP  = $(NAME)_wrap.c
SWIG_EXTRA = $(PACKAGEDIR)/$(NAME).java $(PACKAGEDIR)/$(NAME)JNI.java $(PACKAGEDIR)/BWIPP.java
CLASS_FILES = $(SWIG_EXTRA:.java=.class)

JAVA_CRUFT = $(wildcard *.class)
JAVA_OUT = lib$(NAME).so 

JAR_FILE = lib$(NAME)-$(VERSION).jar
JAR_LINK = lib$(NAME).jar

PREFIX=/usr/local

JC = javac -cp $(CLASSESDIR)
JFLAGS = -g

ifeq ("$(JAVA_HOME)","")
  WHICH_JAVAC := $(shell which javac)
  ifneq ($(WHICH_JAVAC),)
    WHICH_JAVAC := $(dir $(realpath $(WHICH_JAVAC)))
    JAVA_HOME := $(patsubst %/bin/,%,$(WHICH_JAVAC))
  endif
endif

INSTDIR=$(DESTDIR)
ifeq ($(PACKAGING),DEB)
  PREFIX=/usr
  INSTDIR=$(PACKAGING_ROOT)/debian/libpostscriptbarcode-java
endif

cleanlist += $(SWIG_WRAP) $(SWIG_EXTRA) $(JAVA_OUT) $(JAVA_CRUFT) $(JAR_FILE) $(JAR_LINK) $(CLASS_FILES)

.PHONY: all swig-java install uninstall clean

all: swig-java

swig-java: $(JAVA_OUT) $(JAR_FILE) $(JAR_LINK)

$(JAVA_OUT): $(SWIG_WRAP) $(SWIG_EXTRA)
	gcc -fPIC -shared -O2 -g				\
		-fstack-protector-strong			\
		-Wl,-Bsymbolic-functions -Wl,-z,relro		\
		$<						\
		-o $@						\
		-L../../c -l$(NAME)				\
		-I../../c					\
		-I$(JAVA_HOME)/include				\
		-I$(JAVA_HOME)/include/linux

$(SWIG_WRAP) $(SWIG_EXTRA):
	mkdir -p $(PACKAGEDIR)
	swig -Wall -java -o $(SWIG_WRAP) -outdir $(PACKAGEDIR) -package uk.co.terryburton.bwipp $(SWIG_INTERFACE)

$(JAR_FILE): $(CLASS_FILES)
	cd $(CLASSESDIR) && jar cf ../$@ $(CLASS_FILES:classes/%=%)

$(JAR_LINK): $(JAR_FILE)
	ln -sf $< $@

%.class: %.java
	$(JC) $(JFLAGS) $<

install: swig-java
	install -d $(INSTDIR)$(PREFIX)/share/java
	install -m 0644 $(JAR_FILE) $(INSTDIR)$(PREFIX)/share/java
	ln -srf $(INSTDIR)$(PREFIX)/share/java/$(JAR_FILE) $(INSTDIR)$(PREFIX)/share/java/$(JAR_LINK)
	install -d $(INSTDIR)$(PREFIX)/lib/jni
	install -m 0644 $(JAVA_OUT) $(INSTDIR)$(PREFIX)/lib/jni

uninstall:
	$(RM) $(INSTDIR)$(PREFIX)/share/java/$(JAR_FILE)
	$(RM) $(INSTDIR)$(PREFIX)/share/java/$(JAR_LINK)
	$(RM) $(INSTDIR)$(PREFIX)/lib/jni/$(JAVA_OUT)

clean:
	$(RM) $(cleanlist)

