{"name":"Barcode Writer in Pure PostScript","tagline":"","body":"[![Build Status](https://travis-ci.org/bwipp/postscriptbarcode.png?branch=master)](https://travis-ci.org/bwipp/postscriptbarcode)\r\n\r\n  * Homepage: https://www.terryburton.co.uk/barcodewriter/\r\n  * Documentation: https://github.com/bwipp/postscriptbarcode/wiki\r\n  * Download: https://github.com/bwipp/postscriptbarcode/releases\r\n  * Source: https://github.com/bwipp/postscriptbarcode.git\r\n  * Issue tracker: https://github.com/bwipp/postscriptbarcode/issues\r\n  * Mailing list: http://groups.google.co.uk/group/postscriptbarcode\r\n\r\nBarcode Writer in Pure Postscript generates all barcode formats entirely within\r\nPostScript so that the process of converting the input data into the printed\r\noutput can be performed by the printer or RIP itself. This is ideal for\r\nvariable data printing (VDP) and avoids the need to re-implement the barcode\r\ngeneration process whenever your language needs change.\r\n\r\nSince this resource is written in PostScript and interpreted within the\r\nvirtual machine of a printer it is compatible with any operating system and\r\nhardware platform.\r\n\r\nIt makes including any barcode within a PostScript document as simple as\r\ninserting the following directive:\r\n\r\n````\r\n0 0 moveto (978-1-56581-231-4) (includetext)\r\n/isbn /uk.co.terryburton.bwipp findresource exec\r\n```\r\n\r\nThere is a web-based demonstration of the project here:\r\n\r\nhttp://www.terryburton.co.uk/barcodewriter/generator/\r\n\r\n\r\nThe Resources\r\n-------------\r\n\r\nBWIPP is essentially a set of generic PostScript Level 2 named resources that\r\nare provided in four flavours for ease of use. The one to use depends on how\r\nyou intend to deploy the library.\r\n\r\n  * \"Packaged\" or \"unpackaged\": The named resources have been packaged for DSC\r\nconformance, portability and ease of distribution. You will most likely want to\r\nuse a packaged flavour in production, however the unpackaged versions of the\r\nresources are useful for understanding the code, developing the library and\r\ndebugging.\r\n\r\n  * \"Separate files\" or \"monolithic\": The resource is provided as separate files\r\nthat are formatted for direct use by Adobe Distiller, GhostScript, a printer\r\nhard disk or a document manager. The monolithic flavours contain all of the\r\nresources in a single file that is suitable for inclusion in the Prolog section\r\nof a PostScript document template or installing to a printer's initial job VM.\r\n\r\nThis leads to the following set of four files.\r\n\r\nFor production use:\r\n\r\n  * postscriptbarcode-packaged-resource – Packaged; Separate files.\r\n  * postscriptbarcode-monolithic-package – Packaged; Monolithic file. \r\n\r\nFor BWIPP development:\r\n\r\n  * postscriptbarcode-resource – Unpackaged; Seperate files.\r\n  * postscriptbarcode-monolithic – Unpackaged; Monolithic file.\r\n\r\n\r\nDownloading\r\n-----------\r\n\r\nYou can download the prepared packages and the sources from here:\r\n\r\nhttps://github.com/bwipp/postscriptbarcode/releases\r\n\r\nAlternatively you can clone the repository: \r\n\r\n    git clone https://github.com/bwipp/postscriptbarcode.git\r\n\r\nIf you are using Ubuntu you can download the daily build of the trunk of BWIPP\r\nfrom PPA:\r\n\r\n    sudo add-apt-repository ppa:postscriptbarcode-maintainers/ppa\r\n    sudo apt-get update\r\n    sudo apt-get install libpostscriptbarcode\r\n\r\n\r\nBuilding\r\n--------\r\n\r\nThe build requirements are Perl, GNU Make and GhostScript.\r\n\r\nJust run `make` from the root of the source distribution. The flavours are built\r\ninto subdirectories of the `build/` directory.\r\n","google":"UA-187654-1","note":"Don't delete this file! It's used internally to help with page regeneration."}